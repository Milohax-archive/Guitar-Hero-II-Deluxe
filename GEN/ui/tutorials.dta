#define WAIT_FOR_VO ({$task wait {tutorial is_vo_playing}})
#define START_BG_MUSIC
({$task sleep 1.0e-2}
   {$task sleep 1.0}
   {play_sfx bkgd_music})
#define LONG_VO_GAP ({$task sleep 0.6})
#define SHORT_VO_GAP ({$task sleep 0.5})
#define END_OF_SONG_PERCENT (97)
#define CORNER_WIDTH (16)
#define PIECE_WIDTH (16)
#define FILLER_WIDTH (16)
#define HEIGHT_SHIFT (25)
#define SONG_DELAY_SEC (3.2)
#define TUT1_1_BOX (270 147)
#define TUT1_1_TASK (264 86 FALSE)
#define TUT1_2_BOX (270 87)
#define TUT1_2_TASK (264 65 TRUE)
#define TUT1_3_BOX (270 87)
#define TUT1_3_TASK (264 87 TRUE)
#define TUT1_4_BOX (270 147)
#define TUT1_4_TASK (264 86 TRUE)
#define TUT1_5_BOX (270 87)
#define TUT1_5_TASK (264 66 TRUE)
#define TUT1_6_BOX(293 147)
#define TUT2_2_BOX (270 107)
#define TUT2_2_TASK (264 86 FALSE)
#define TUT2_3_BOX (270 127)
#define TUT2_3_TASK (264 127 FALSE)
#define TUT2_4_BOX (305 167)
#define TUT2_4_TASK (264 107 TRUE)
#define TUT2_5_BOX (330 187)
#define TUT3_1_BOX (270 38)
#define TUT3_1_TASK (264 86 TRUE)
#define TUT3_2_BOX (330 107)
#define TUT3_2_TASK (264 86 TRUE)
#define TUT3_3_BOX (285 38)
#define TUT3_3_TASK (264 87 TRUE)
#define TUT3_4_BOX (285 38)
#define TUT3_4_TASK (264 87 TRUE)
#define TUTORIAL_STATES ((intro playing_notes diff_notes held_notes chords interface wrapup star_intro star_combos whammy wail freestyle sustain pulloff))
{new TutorialPanel tutorial
   (file "")
   (lesson "")
   (song "")
   (state "")
   (start_tutorial
      {set [lesson] {tutorials_panel get start_state}}
      {$this start_lesson})
   (exit
      {$this set_beatmatch_muting FALSE}
      {beatmatch set_paused FALSE}
      {taskmgr clear_tasks}
      {options set_mute_fx FALSE}
      {hud set_showing TRUE}
      {track_panel set_showing TRUE})
   (poll
      {cond
         ({== [state] loading}
            {game exit}
            {game load_song [song]}
            {track_panel set_track_in}
            {set [state] wait_for_song_load})
         ({== [state]
               wait_for_song_load}
            {if {game loaded}
               {game enter}
               {if {==
               {ui current_screen}
               tut_pause_screen}
                  {tut_pause_screen pause}}
               {set [state] start_lesson}})
         ({== [state] start_lesson}
            {set [state] ""}
            {$this start_lesson})})
   (start_lesson
      {game set_need_intro FALSE}
      {track_panel reset}
      {print "starting lesson " [lesson] "\n"}
      {switch [lesson]
         (intro
            {thread_task
               (units kTaskTutorialSeconds)
               (script #include tutorial_11_tuning.dta)})
         (playing_notes
            {thread_task
               (units kTaskTutorialSeconds)
               (script #include tutorial_12_playing_notes.dta)})
         (diff_notes
            {thread_task
               (units kTaskTutorialSeconds)
               (script #include tutorial_13_diff_notes.dta)})
         (held_notes
            {thread_task
               (units kTaskTutorialSeconds)
               (script #include tutorial_14_held_notes.dta)})
         (chords
            {thread_task
               (units kTaskTutorialSeconds)
               (script #include tutorial_15_chords.dta)})
         (interface
            {thread_task
               (units kTaskTutorialSeconds)
               (script #include tutorial_16_interface.dta)})
         (wrapup
            {thread_task
               (units kTaskTutorialSeconds)
               (script #include tutorial_19_wrapup.dta)})
         (star_intro
            {thread_task
               (units kTaskTutorialSeconds)
               (script #include tutorial_21_star_intro.dta)})
         (star_combos
            {thread_task
               (units kTaskTutorialSeconds)
               (script #include tutorial_22_star_combos.dta)})
         (whammy
            {thread_task
               (units kTaskTutorialSeconds)
               (script #include tutorial_23_whammy.dta)})
         (wail
            {thread_task
               (units kTaskTutorialSeconds)
               (script #include tutorial_24_wail.dta)})
         (freestyle
            {thread_task
               (units kTaskTutorialSeconds)
               (script #include tutorial_31_freestyle.dta)})
         (sustain
            {thread_task
               (units kTaskTutorialSeconds)
               (script #include tutorial_32_sustain.dta)})
         (pulloff
            {thread_task
               (units kTaskTutorialSeconds)
               (script #include tutorial_33_pulloff.dta)})
         {print "lesson " [lesson] " not found!\n"}})
   (get_next_lesson
      ($inc)
      {do
         ($old)
         ($new)
         {find_elem TUTORIAL_STATES {$this get lesson} $old}
         {set $new {mod {'+' $old $inc} {size TUTORIAL_STATES}}}
         {elem TUTORIAL_STATES $new}})
   (next_lesson
      ($lesson)
      {$this set lesson $lesson}
      {$this set state start_lesson}
      {$task exit})
   (switch_to_song
      ($lesson $song)
      {$this set lesson $lesson}
      {$this set song $song}
      {$this set state loading}
      {$task exit})
   (tutorial_inc
      ($num)
      {do
         ($next {$this get_next_state $num})
         {taskmgr clear_tasks}
         {$this reset_vo}
         {$this set_state $next}})
   (update_tut_score
      ($label $score $total)
      {tut_score.lbl set_localized_text
         {sprintf {localize tut_notes_fmt} $label $score $total}})
   (size_left_box
      ($width $height)
      {tut_box_ul.mesh set_local_pos {- {/ CORNER_WIDTH 2} {/ $width 2}} 0 {- {/ $height 2} {/ CORNER_WIDTH 2}}}
      {tut_box_ur.mesh set_local_pos {- {/ $width 2} {/ CORNER_WIDTH 2}} 0 {- {/ $height 2} {/ CORNER_WIDTH 2}}}
      {tut_box_rp.mesh set_local_pos {- {/ $width 2} {/ CORNER_WIDTH 2}} 0 0}
      {tut_box_rp.mesh set_local_scale 1 1 {/ {- $height {'*' 2 CORNER_WIDTH}} PIECE_WIDTH}}
      {tut_box_bl.mesh set_local_pos {- {/ CORNER_WIDTH 2} {/ $width 2}} 0 {- {/ CORNER_WIDTH 2} {/ $height 2}}}
      {tut_box_lp.mesh set_local_pos {- {/ CORNER_WIDTH 2} {/ $width 2}} 0 0}
      {tut_box_lp.mesh set_local_scale 1 1 {/ {- $height {'*' 2 CORNER_WIDTH}} PIECE_WIDTH}}
      {tut_box_br.mesh set_local_pos {- {/ $width 2} {/ CORNER_WIDTH 2}} 0 {- {/ CORNER_WIDTH 2} {/ $height 2}}}
      {tut_box_mp.mesh set_local_scale {/ {- $width {'*' 2 CORNER_WIDTH}} FILLER_WIDTH} 1 {/ $height FILLER_WIDTH}}
      {tut_box_left.view set_local_pos {- {/ $width 2} 308} 0 {- 227 {/ $height 2}}})
   (size_right_box
      ($width $height $score)
      {if_else $score
         {set $height_shift HEIGHT_SHIFT}
         {set $height_shift 0}}
      {tut_box_ul1.mesh set_local_pos {- {/ CORNER_WIDTH 2} {/ $width 2}} 0 {- {/ {'+' $height $height_shift} 2} {/ CORNER_WIDTH 2}}}
      {tut_box_ur1.mesh set_local_pos {- {/ $width 2} {/ CORNER_WIDTH 2}} 0 {- {/ {'+' $height $height_shift} 2} {/ CORNER_WIDTH 2}}}
      {tut_box_rp1.mesh set_local_pos {- {/ $width 2} {/ CORNER_WIDTH 2}} 0 0}
      {tut_box_rp1.mesh set_local_scale 1 1 {/ {- {'+' $height $height_shift} {'*' 2 CORNER_WIDTH}} PIECE_WIDTH}}
      {tut_box_bl1.mesh set_local_pos {- {/ CORNER_WIDTH 2} {/ $width 2}} 0 {- {/ CORNER_WIDTH 2} {/ {'+' $height $height_shift} 2}}}
      {tut_box_lp1.mesh set_local_pos {- {/ CORNER_WIDTH 2} {/ $width 2}} 0 0}
      {tut_box_lp1.mesh set_local_scale 1 1 {/ {- {'+' $height $height_shift} {'*' 2 CORNER_WIDTH}} PIECE_WIDTH}}
      {tut_box_br1.mesh set_local_pos {- {/ $width 2} {/ CORNER_WIDTH 2}} 0 {- {/ CORNER_WIDTH 2} {/ {'+' $height $height_shift} 2}}}
      {tut_box_mp1.mesh set_local_scale {/ {- $width {'*' 2 CORNER_WIDTH}} FILLER_WIDTH} 1 {/ {'+' $height $height_shift} FILLER_WIDTH}}
      {tut_box_right.view set_local_pos {- 307 {/ $width 2}} 0 {- 226 {/ {'+' $height $height_shift} 2}}}
      {tut_score.lbl set_local_pos {- 307 {/ $width 2}} 0 {- 220 $height}})
   (set_beatmatch_muting
      ($mute)
      {beatmatch
         set_volume
         {if_else $mute kDbSilence 0}}
      {options set_mute_fx $mute})
   (state intro)}
{new UIPanel tutorials_panel
   (file
      {if_else $gamegh1
         tutorials_gh1.milo
         tutorials.milo})
   (enter
      {gamecfg set mode tutorial}
      {$this set_focus tut_1.btn}
      {do
         ($done
            {campaign tutorials_done})
         {tut_2.btn set_state
            {if_else {>= $done 1}
               kNormal
               kDisabled}}
         {tut_3.btn set_state
            {if_else {>= $done 2}
               kNormal
               kDisabled}}})
   (FOCUS_MSG
      {switch
         $new_focus
         (tut_1.btn
            {tut_blurb.lbl set_text TUT_1_BLURB})
         (tut_2.btn
            {tut_blurb.lbl set_text TUT_2_BLURB})
         (tut_3.btn
            {tut_blurb.lbl set_text TUT_3_BLURB})})
   (SELECT_START_MSG
      {switch
         $component
         (tut_1.btn
            {set [start_state] intro}
            {set [tut_song] tutorial102}
            {campaign do_tutorial 1})
         (tut_2.btn
            {set [start_state] star_intro}
            {set [tut_song] tutorial202}
            {campaign do_tutorial 2})
         (tut_3.btn
            {set [start_state] freestyle}
            {set [tut_song] tutorial205}
            {campaign do_tutorial 3})}
      {ui goto_screen tut_loading_screen}
      kDataUnhandled)
   (start_state intro)
   (tut_song tutorial102)}
{new GHScreen tutorials_screen
   (panels tutorials_panel meta helpbar)
   (focus tutorials_panel)
   (helpbar
      (default
         ((fret1 help_continue)
            (fret2 help_back)
            (strum help_updown))))
   (SELECT_START_MSG
      {game set_tutorial_running TRUE}
      kDataUnhandled)}
{new GHScreen tut_loading_screen
   (panels loading_panel)
   (allow_back FALSE)
   (animate_transition FALSE)
   (enter
      {$this reset_ambient}
      {{game get_bank_loader} reset}
      {game set_song {tutorials_panel get tut_song}}
      {{game get_player_config 0} set_difficulty kDifficultyEasy}
      {{game get_player_config 0} set_track_type guitar}
      {ui goto_screen tut_script_screen})}
{new UIPanel tut_script
   (file
      {if_else {options get_lefty 0}
         tut_script_lefty.milo
         tut_script.milo})
   (enter
      {tutorial1.view set_showing FALSE}
      {tutorial2.view set_showing FALSE}
      {beatmatch set_paused TRUE}
      {tutorial start_tutorial})
   (exit)}
{new GHPanel tutorial_panel
   (file practice_panel.milo)
   (enter
      {section.lbl set_showing FALSE})}

#define TUTORIAL_PANELS (tutorial tutorial_panel hud game track_panel mtv_overlay_panel)
{new GHScreen tut_script_screen
   (panels TUTORIAL_PANELS tut_script)
   (focus tut_script)
   (allow_back FALSE)
   (animate_transition FALSE)
   (paused FALSE)
   (enter
      {tutorial set_paused FALSE}
      {set [paused] FALSE})
   (BUTTON_DOWN_MSG
      {if {&&
      {== $player_num 0}
      {== $button kPad_Start}}
         {set [paused] TRUE}
         {ui push_screen tut_pause_screen}})
   (poll
      {if {&&
      {tutorial is_missing_guitar}
      {! {campaign tutorial_access}}
      {! {ui in_transition}}
      {! [paused]}}
         {set [paused] TRUE}
         {ui push_screen tut_pause_controller_screen}})}
{new GHPanel tut_pause_panel
   (file tut_pause.milo)
   (focus resume.btn)
   (reset_focus TRUE)
   (player_num 0)}

#define TUT_PAUSE_SCREEN_HANDLERS
((clear_vram TRUE)
   (allow_back FALSE)
   (animate_transition FALSE)
   (enter
      {if {== {tutorial get state} ""}
         {$this pause}})
   (exit
      {game set_paused FALSE}
      {beatmatch set_paused [game_paused]}
      {hud set_paused FALSE}
      {track_panel set_paused FALSE}
      {set [paused] FALSE})
   (pause
      {set [game_paused] {beatmatch paused}}
      {beatmatch set_paused TRUE}
      {game set_paused TRUE}
      {hud set_paused TRUE}
      {track_panel set_paused TRUE}
      {tut_script set_paused TRUE}
      {tutorial set_paused TRUE}
      {synth pause_all_sfx TRUE}
      {set [paused] TRUE})
   (poll
      {if {! [paused]}
         {tutorial poll}})
   (resume
      {tut_script set_paused FALSE}
      {tutorial set_paused FALSE}
      {synth pause_all_sfx FALSE}
      {ui pop_screen}
      {tut_script_screen set paused FALSE})
   (game_paused FALSE)
   (track_paused FALSE)
   (paused FALSE))
{new GHScreen tut_pause_screen
   (panels tut_pause_panel)
   (focus tut_pause_panel)
   TUT_PAUSE_SCREEN_HANDLERS
   (SELECT_START_MSG
      {switch $component
         (resume.btn
            {$this resume})
         (restart.btn
            {stop_sfx bkgd_music}
            {tutorial_quit_screen set next_screen tut_loading_screen}
            {ui pop_screen tutorial_quit_screen})
         (quit.btn
            {tutorial_quit_screen set next_screen meta_loading_screen}
            {meta_loading_screen set next_screen main_screen}
            {ui pop_screen tutorial_quit_screen})})
   (BUTTON_DOWN_MSG
      {if_else [paused]
         {do
            {if {&&
            {== $player_num 0}
            {== $button kPad_Start}}
               {$this resume}}
            kDataUnhandled}
         TRUE})}
{new GHPanel tut_pause_controller_panel
   (file tut_pause_controller.milo)
   (player_num 0)
   (focus pause_controller_resume.btn)
   (enter {pause_controller_msg.lbl set_text tut_guitar_loss_msg})
   (poll
      {if_else {tutorial is_missing_guitar}
         {$this disable pause_controller_resume.btn}
         {$this enable pause_controller_resume.btn}})}
{new GHScreen tut_pause_controller_screen
   (panels tut_pause_controller_panel)
   (focus tut_pause_controller_panel)
   TUT_PAUSE_SCREEN_HANDLERS
   (SELECT_START_MSG
      {switch $component
         (pause_controller_resume.btn
		    {$this resume})
         (pause_controller_exit.btn
            {tutorial_quit_screen set next_screen meta_loading_screen}
            {meta_loading_screen set next_screen main_screen}
            {ui pop_screen tutorial_quit_screen})})}
{new GHScreen tutorial_quit_screen
   (panels tut_script)
   (focus tut_script)
   (allow_back FALSE)
   (animate_transition FALSE)
   (next_screen "")
   (enter
      {stop_sfx bkgd_music}
      {synth stop_all_sfx}
      {{tut_script find tut_script.view} set_showing FALSE}
      {ui goto_screen [next_screen]})}
{new GHScreen tutorial_end_screen
   (panels game tutorial tut_script)
   (focus tut_script)
   (allow_back FALSE)
   (animate_transition FALSE)
   (enter
      {game set_realtime TRUE}
      {stop_sfx bkgd_music}
      {synth stop_all_sfx}
      {{tut_script find tut_script.view} set_showing FALSE}
      {meta_loading_goto main_screen})}