(controller  ; originally from config/beatmatch_controller.dta, then butchered by jnack
   (joypad
#ifndef 2DBUG
#ifndef 8DBUG
      (slots
; use r1 for kick (green)
	{if_else
		$rbdrum
			kPad_R1
			kpad_R1}
	{if_else
		$rbdrum
			0
			0}
; use L1 for kick (green)
	{if_else
		$rbdrum
			kPad_L1
			kpad_L2}
	{if_else
		$rbdrum
			0
			0}
; okay but use L2 for green if you use a pad
	{if_else
		$nodrum
			kPad_L2
			kpad_L1}
	{if_else
		$nodrum
			0
			0}
; use Circle for snare (red)
	{if_else
		$rbdrum
			kPad_Circle
			kpad_L1}
	{if_else
		$rbdrum
			1
			1}
; okay but use L1 for red if you use a pad
	{if_else
		$nodrum
			kPad_L1
			kpad_Circle}
	{if_else
		$nodrum
			1
			1}
; use Tri for ride? (yellow)
	{if_else
		$rbdrum
			kPad_Tri
			kpad_R1}
	{if_else
		$rbdrum
			2
			2}
; okay but use R1 for yellow if you use a pad
	{if_else
		$nodrum
			kPad_R1
			kpad_Tri}
	{if_else
		$nodrum
			2
			2}
; use Square for tom (blue)
	{if_else
		$rbdrum
			kPad_Square
			kpad_R2}
	{if_else
		$rbdrum
			3
			3}
; okay but use R2 for blue if you use a pad
	{if_else
		$nodrum
			kPad_R2
			kpad_Square}
	{if_else
		$nodrum
			3
			3}
; use Square for crash (orange)
	{if_else
		$rbdrum
			kPad_X
			kpad_X}
	{if_else
		$rbdrum
			4
			4}
; okay but use X for orange if you use a pad
	{if_else
		$nodrum
			kPad_X
			kpad_X}
	{if_else
		$nodrum
			4
			4}
	   ) ; Don't forget to close parenth
#endif
#endif
#ifdef 2DBUG
(slots kPad_L2 0 kPad_L1 1 kPad_R1 2 kPad_R2 3 kPad_X 4)
#endif
#ifdef 8DBUG
(slots kPad_L2 0 kPad_L1 1 kPad_R1 2 kPad_R2 3 kPad_X 4)
#endif
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      (force_mercury kPad_Select)
      (dpad_for_navigation FALSE))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

   (joypad_guitar
#ifndef 2DBUG
#ifndef 8DBUG
      (slots
; use r1 for kick (green)
	{if_else
		$rbdrum
			kPad_R1
			kpad_R1}
	{if_else
		$rbdrum
			0
			0}
; use L1 for kick (green)
	{if_else
		$rbdrum
			kPad_L1
			kpad_L2}
	{if_else
		$rbdrum
			0
			0}
; okay but use L2 for green if you use a pad
	{if_else
		$nodrum
			kPad_L2
			kpad_L1}
	{if_else
		$nodrum
			0
			0}
; use Circle for snare (red)
	{if_else
		$rbdrum
			kPad_Circle
			kpad_L1}
	{if_else
		$rbdrum
			1
			1}
; okay but use L1 for red if you use a pad
	{if_else
		$nodrum
			kPad_L1
			kpad_Circle}
	{if_else
		$nodrum
			1
			1}
; use Tri for ride? (yellow)
	{if_else
		$rbdrum
			kPad_Tri
			kpad_R1}
	{if_else
		$rbdrum
			2
			2}
; okay but use R1 for yellow if you use a pad
	{if_else
		$nodrum
			kPad_R1
			kpad_Tri}
	{if_else
		$nodrum
			2
			2}
; use Square for tom (blue)
	{if_else
		$rbdrum
			kPad_Square
			kpad_R2}
	{if_else
		$rbdrum
			3
			3}
; okay but use R2 for blue if you use a pad
	{if_else
		$nodrum
			kPad_R2
			kpad_Square}
	{if_else
		$nodrum
			3
			3}
; use X for crash (orange)
	{if_else
		$rbdrum
			kPad_X
			kpad_X}
	{if_else
		$rbdrum
			4
			4}
; okay but use X for orange if you use a pad
	{if_else
		$nodrum
			kPad_X
			kpad_X}
	{if_else
		$nodrum
			4
			4}
	   ) ; Don't forget to close parenth
#endif
#endif
#ifdef 2DBUG
(slots kPad_L2 0 kPad_L1 1 kPad_R1 2 kPad_R2 3 kPad_X 4)
#endif
#ifdef 8DBUG
(slots kPad_L2 0 kPad_L1 1 kPad_R1 2 kPad_R2 3 kPad_X 4)
#endif
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      (force_mercury kPad_Select)
      (dpad_for_navigation FALSE))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

   (lefty_joypad_guitar
#ifndef 2DBUG
#ifndef 8DBUG
      (slots
;comments are wrong. it's the same thing as above but flipped fuck you
; use r1 for kick (green)
	{if_else
		$rbdrum
			kPad_R1
			kpad_R1}
	{if_else
		$rbdrum
			4
			4}
; okay but use X for green if you use a pad
	{if_else
		$nodrum
			kPad_X
			kpad_X}
	{if_else
		$nodrum
			0
			0}
; use Circle for snare (red)
	{if_else
		$rbdrum
			kPad_Square
			kpad_R2}
	{if_else
		$rbdrum
			1
			1}
; okay but use L1 for red if you use a pad
	{if_else
		$nodrum
			kPad_R2
			kpad_Square}
	{if_else
		$nodrum
			1
			1}
; use Tri for ride? (yellow)
	{if_else
		$rbdrum
			kPad_Tri
			kpad_R1}
	{if_else
		$rbdrum
			2
			2}
; okay but use R1 for yellow if you use a pad
	{if_else
		$nodrum
			kPad_R1
			kpad_Tri}
	{if_else
		$nodrum
			2
			2}
; use Square for tom (blue)
	{if_else
		$rbdrum
			kPad_Circle
			kpad_L1}
	{if_else
		$rbdrum
			3
			3}
; okay but use R2 for blue if you use a pad
	{if_else
		$nodrum
			kPad_L1
			kpad_Ciircle}
	{if_else
		$nodrum
			3
			3}
; use Square for crash (orange)
	{if_else
		$rbdrum
			kPad_L1
			kpad_L2}
	{if_else
		$rbdrum
			4
			4}
; okay but use X for orange if you use a pad
	{if_else
		$nodrum
			kPad_L2
			kpad_L1}
	{if_else
		$nodrum
			4
			4}
	   ) ; Don't forget to close parenth
#endif
#endif
#ifdef 2DBUG
(slots kPad_X 0 kPad_R2 1 kPad_R1 2 kPad_L1 3 kPad_L2 4)
#endif
#ifdef 8DBUG
(slots kPad_X 0 kPad_R2 1 kPad_R1 2 kPad_L1 3 kPad_L2 4)
#endif
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      (force_mercury kPad_Select)
      (dpad_for_navigation FALSE))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   (guitar
      (slots kPad_R2 0 kPad_Circle 1 kPad_Tri 2 kPad_X 3 kPad_Square 4)
      (force_mercury kPad_Select))
   (guitar_xbox
      (slots kPad_X 0 kPad_Tri 1 kPad_Square 2 kPad_Circle 3 kPad_L1 4)
      (force_mercury kPad_Select)
      (mercury_switch kPad_RStickUp)))
(midi_parsers
   #include midi_parsers.dta)
(watcher
   (slop 100)
   (cheat_error 0)
   (pitch_bend_range 1)
   (ms_to_full_pitch_bend 1000))

; originally from ../../../system/run/config/beatmatch.dta
(parser
   (hopo_threshold 170)
   (track_mapping
      (GUITAR guitar)
      (RHYTHM rhythm)
      (BASS bass)
      (KEYS keys)
      (DRUM drum)
      (VOCALS vocals)
      (SINGER vocals)
      (RAP rap)
      (DJ dj)))
; end manual merge

(ingame_stats
   (missed_slop_threshold 200))
(audio
   (multiplayer_scale 0.33)
   (multiplayer_attenuation 1.5)
   (multiplayer_common_attenuation 1.5)
   (background_attenuation 5.0)
   (practice_attenuation 7.5)
   (submixes
      (basic
         (0 1 2 3 4))
      (easy_single_gem
         ((0 1 2 3 4)
            (0 1 2 3 4)
            (0 1 2 3 4)
            (0 1 2 3 4)
            (0 1 2 3 4)))
      (easy_combo
         (0
            (0 1)
            (2 3 4)
            (2 3 4)
            (2 3 4)))
      (easy_walk1
         ((0 1 2 3 4 5)
            (0 1 2 3 4 5)
            (0 1 2 3 4 5)
            (0 1 2 3 4 5)
            (0 1 2 3 4 5)))
      (med_walk1
         ((0 1 2 3 4 5)
            (0 1 2 3 4 5)
            (2)
            (3)
            (0 1 2 3 4 5)))
      (hard_walk1
         ((0)
            (1)
            (2)
            (3 4 5)
            (3 4 5)))
      (ironman
         ((0 1 2 3 4 5 6 7)
            (0 1 2 3 4 5 6 7)
            (0 1 2 3 4 5 6 7)
            (0 1 2 3 4 5 6 7)
            (0 1 2 3 4 5 6 7)))
      (bestsongever
         ((0 1 2 3 4 5 6)
            (0 1 2 3 4 5 6)
            (0 1 2 3 4 5 6)
            (0 1 2 3 4 5 6)
            (0 1 2 3 4 5 6)))))

; originally from ../../../system/run/config/beatmatch.dta
(mercury_switch_filter
 (any_sign_filter
  (window 0.5)
  (num_frames 3)))
; end manual merge